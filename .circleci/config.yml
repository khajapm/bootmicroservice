#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      - image: circleci/mysql:5.7
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
 
    working_directory: ~/repo
    
    ## Customize database setup
    database:
      override:
        - echo "CREATE USER IF NOT EXISTS 'root'@'localhost' IDENTIFIED BY 'password'" | mysql -u root
        - echo "GRANT ALL PRIVILEGES ON *.* TO 'root'@'localhost' WITH GRANT OPTION" | mysql -u root
        - echo "FLUSH PRIVILEGES" | mysql -u root
        - echo "CREATE DATABASE IF NOT EXISTS circle_test" | mysql -u root
 
    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
      MYSQL_ALLOW_EMPTY_PASSWORD: true
      MYSQL_USER: root
      MYSQL_PASSWORD: 
      MYSQL_ROOT_PASSWORD:
      MYSQL_RANDOM_ROOT_PASSWORD:
      MYSQL_DATABASE: circle_test
      
    steps:
      - checkout
 
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
 
      - run: mvn dependency:go-offline
       
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
     # Build application
      - run: mvn package
      
      #Store output of build
      - store_artifacts:
          path: target/testservice-0.0.1-SNAPSHOT.jar
          
      - run:
          name: Build and push the image to Docker Hub
          command: |
            usermod -aG docker ${USER_NAME}
            docker build -t springbootimage .
            docker tag springbootimage khajapm/fullstackdemo-docker:springbootdev
            docker login --username=${USER_NAME} --password=${USER_PASS}
            docker push khajapm/fullstackdemo-docker
